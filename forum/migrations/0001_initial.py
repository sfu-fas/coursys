# Generated by Django 2.2.22 on 2021-06-18 09:17

import courselib.json_fields
import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('coredata', '0025_update_choices'),
    ]

    operations = [
        migrations.CreateModel(
            name='Identity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pseudonym', models.CharField(max_length=100)),
                ('digest_frequency', models.PositiveIntegerField(blank=True, choices=[(1, 'every hour'), (3, 'every 3 hours'), (6, 'every 6 hours'), (24, 'every 24 hours')], default=None, null=True)),
                ('last_digest', models.DateTimeField(default='2000-01-01')),
                ('config', courselib.json_fields.JSONField(default=dict)),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='coredata.Member')),
                ('offering', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='coredata.CourseOffering')),
            ],
            options={
                'unique_together': {('offering', 'pseudonym'), ('offering', 'member')},
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=datetime.datetime.now)),
                ('modified_at', models.DateTimeField(default=datetime.datetime.now)),
                ('type', models.CharField(choices=[('QUES', 'Question'), ('DISC', 'Discussion')], default='DISC', max_length=4)),
                ('status', models.CharField(choices=[('OPEN', 'Open'), ('ANSW', 'Answered'), ('NOAN', 'No Answer Needed'), ('LOCK', 'Closed to further replies'), ('HIDD', 'Hidden')], default='OPEN', max_length=4)),
                ('number', models.PositiveIntegerField()),
                ('config', courselib.json_fields.JSONField(default=dict)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='coredata.Member')),
                ('author_identity', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='forum.Identity')),
                ('offering', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='coredata.CourseOffering')),
            ],
            options={
                'unique_together': {('offering', 'number')},
            },
        ),
        migrations.CreateModel(
            name='Thread',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('pin', models.PositiveSmallIntegerField(default=0)),
                ('privacy', models.CharField(choices=[('ALL', 'Viewable by students'), ('INST', 'Private question to instructors/TAs')], default='ALL', max_length=4)),
                ('last_activity', models.DateTimeField(default=datetime.datetime.now)),
                ('config', courselib.json_fields.JSONField(default=dict)),
                ('post', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='forum.Post')),
            ],
            options={
                'ordering': ('-pin', '-last_activity'),
            },
        ),
        migrations.CreateModel(
            name='Reply',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('config', courselib.json_fields.JSONField(default=dict)),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='parent', to='forum.Post')),
                ('post', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='forum.Post')),
                ('thread', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='forum.Thread')),
            ],
            options={
                'ordering': ('post__created_at',),
            },
        ),
        migrations.CreateModel(
            name='PostHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=datetime.datetime.now)),
                ('config', courselib.json_fields.JSONField(default=dict)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='forum.Post')),
                ('reply', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='forum.Reply')),
                ('thread', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='forum.Thread')),
            ],
        ),
        migrations.CreateModel(
            name='Forum',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('config', courselib.json_fields.JSONField(default=dict)),
                ('offering', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='coredata.CourseOffering')),
            ],
        ),
        migrations.CreateModel(
            name='ReadThread',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='coredata.Member')),
                ('thread', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='forum.Thread')),
            ],
            options={
                'unique_together': {('member', 'thread')},
            },
        ),
        migrations.CreateModel(
            name='ReadReply',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='coredata.Member')),
                ('reply', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='forum.Reply')),
            ],
            options={
                'unique_together': {('member', 'reply')},
            },
        ),
        migrations.CreateModel(
            name='Reaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reaction', models.CharField(choices=[('UP', 'Thumbs Up'), ('LOVE', 'Love'), ('CLAP', 'Clap'), ('LAUG', 'Laugh'), ('CONF', 'Confused'), ('NONE', 'no reaction')], max_length=4)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='coredata.Member')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='forum.Post')),
            ],
            options={
                'unique_together': {('member', 'post')},
            },
        ),
    ]
